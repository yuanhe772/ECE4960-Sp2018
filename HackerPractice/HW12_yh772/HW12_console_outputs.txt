/** Note 7, Page 41:
 * Use the following 1D grid with zero Dirichlet boundary conditions at x = 0 and x = 4. 
 * The initial condition is n(x=1) = n(x=3) = 0 and n(x=2) = 10. 
 * Solve for n(x) for t from 2 to 5. */
 ############################################## HP1 Output ####################################################
Direchlet boundary:
    When t = 2: 
        [n1, n2, n3] = [1.4285713353395768, 4.285714006018731, 1.4285713353395768]
    When t = 3: 
        [n1, n2, n3] = [1.2244896360923412, 2.244897666169292, 1.2244896360923412]
    When t = 4: 
        [n1, n2, n3] = [0.8454808840285891, 1.3119530959064314, 0.8454808840285891]
    When t = 5: 
        [n1, n2, n3] = [0.5497707852624365, 0.8038315269367444, 0.5497707852624365]
Neumann boundary:
    When t = 2: 
        [n1, n2, n3] = [2.4999998257707015, 4.999999651541403, 2.4999998257707015]
    When t = 3: 
        [n1, n2, n3] = [3.1249993901974826, 3.749999303082836, 3.1249993901974826]
    When t = 4: 
        [n1, n2, n3] = [3.281249009070961, 3.4374988892883387, 3.281249009070961]
    When t = 5: 
        [n1, n2, n3] = [3.3203111279444855, 3.359373486383218, 3.3203111279444855]





/** Note 7, page 57
 * Use the following 1D grid with zero Dirichlet boundary conditions at x = 0 and x = 6. 
 * The initial condition is u(x=2) = 10 and u(x) = 0 otherwise. 
 * Solve for u(t, x) for t from 2 to 5.*/
 ############################################## HP2 Output ####################################################
Up-winding Forward Euler:
    When t = 2: 
        [u1, u2, u3, u4, u5] = [0.0, 40.0, -40.0, 10.0, 0.0]
    When t = 3: 
        [u1, u2, u3, u4, u5] = [0.0, 80.0, -120.0, 60.0, -10.0]
    When t = 4: 
        [u1, u2, u3, u4, u5] = [0.0, 160.0, -320.0, 240.0, -80.0]
    When t = 5: 
        [u1, u2, u3, u4, u5] = [0.0, 320.0, -800.0, 800.0, -400.0]

Up-winding Backward Euler:
    When t = 2: 
        [u1, u2, u3, u4, u5] = [NaN, NaN, NaN, NaN, NaN]
    When t = 3: 
        [u1, u2, u3, u4, u5] = [NaN, NaN, NaN, NaN, NaN]
    When t = 4: 
        [u1, u2, u3, u4, u5] = [NaN, NaN, NaN, NaN, NaN]
    When t = 5: 
        [u1, u2, u3, u4, u5] = [NaN, NaN, NaN, NaN, NaN]

Down-winding Forward Euler:
    When t = 2: 
        [u1, u2, u3, u4, u5] = [0.0, 0.0, 0.0, 0.0, 0.0]
    When t = 3: 
        [u1, u2, u3, u4, u5] = [0.0, 0.0, 0.0, 0.0, 0.0]
    When t = 4: 
        [u1, u2, u3, u4, u5] = [0.0, 0.0, 0.0, 0.0, 0.0]
    When t = 5: 
        [u1, u2, u3, u4, u5] = [0.0, 0.0, 0.0, 0.0, 0.0]

Down-winding Backward Euler:
    When t = 2: 
        [u1, u2, u3, u4, u5] = [NaN, NaN, NaN, NaN, NaN]
    When t = 3: 
        [u1, u2, u3, u4, u5] = [NaN, NaN, NaN, NaN, NaN]
    When t = 4: 
        [u1, u2, u3, u4, u5] = [NaN, NaN, NaN, NaN, NaN]
    When t = 5: 
        [u1, u2, u3, u4, u5] = [NaN, NaN, NaN, NaN, NaN]
        
Neumann: Upwinding Forward Euler:
    When t = 2: 
        [u1, u2, u3, u4, u5] = [0.0, 40.0, -40.0, 10.0, 0.0]
    When t = 3: 
        [u1, u2, u3, u4, u5] = [0.0, 80.0, -120.0, 60.0, -10.0]
    When t = 4: 
        [u1, u2, u3, u4, u5] = [0.0, 160.0, -320.0, 240.0, -80.0]
    When t = 5: 
        [u1, u2, u3, u4, u5] = [0.0, 320.0, -800.0, 800.0, -400.0]
    When t = 6: 
        [u1, u2, u3, u4, u5] = [0.0, 640.0, -1920.0, 2400.0, -1600.0]
    When t = 7: 
        [u1, u2, u3, u4, u5] = [0.0, 1280.0, -4480.0, 6720.0, -5600.0]
    When t = 8: 
        [u1, u2, u3, u4, u5] = [0.0, 2560.0, -10240.0, 17920.0, -17920.0]
    When t = 9: 
        [u1, u2, u3, u4, u5] = [0.0, 5120.0, -23040.0, 46080.0, -53760.0]
    When t = 10: 
        [u1, u2, u3, u4, u5] = [0.0, 10240.0, -51200.0, 115200.0, -153600.0]
